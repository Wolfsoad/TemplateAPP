@model STRACT.Entities.HumanResources.UserHoliday
@*

*@
@{
}



<div id="calendar"></div>
<div class="modal fade" id="event-modal">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Event</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <input type="hidden" name="event-index">
        <form class="form-horizontal">
          <div class="form-group row">
            <label for="event-name" class="col-sm-4 control-label">Name</label>
            <div class="col-sm-8">
              <input id="event-name" name="event-name" type="text" class="form-control">
            </div>
          </div>
          <div class="form-group row">
            <label for="event-location" class="col-sm-4 control-label">Location</label>
            <div class="col-sm-8">
              <input id="event-location" name="event-location" type="text" class="form-control">
            </div>
          </div>
          <div class="form-group row">
            <label for="min-date" class="col-sm-4 control-label">Dates</label>
            <div class="col-sm-8">
              <div class="input-group input-daterange" data-provide="datepicker">
                <input id="min-date" name="event-start-date" type="text" class="form-control">
                <div class="input-group-prepend input-group-append">
                    <div class="input-group-text">to</div>
                </div>
                <input name="event-end-date" type="text" class="form-control">
              </div>
            </div>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="save-event">
          Save
        </button>
      </div>
    </div>
  </div>
</div>
<div id="context-menu">
</div>

@section Scripts {
    <script>
        function getMyData() {

            var myData= [];
            $.ajax({
                url: '/userholidays/GetCalendarItems',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    for (var i = 0; i < response.length; i++) {
                        myData.push({
                            id: response[i].id,
                            name: response[i].name,
                            startDate: new Date(response[i].startDate),
                            endDate: new Date(response[i].endDate),
                            color: response[i].color,
                        });
                    }

                }
            });
            return myData;
        }
        debugger;

        let calendar = null;

        //Edit calendar event
        function editEvent(event) {
            $('#event-modal input[name="event-index"]').val(event ? event.id : '');
            $('#event-modal input[name="event-name"]').val(event ? event.name : '');
            $('#event-modal input[name="event-location"]').val(event ? event.location : '');
            $('#event-modal input[name="event-start-date"]').datepicker('update', event ? event.startDate : '');
            $('#event-modal input[name="event-end-date"]').datepicker('update', event ? event.endDate : '');
            $('#event-modal').modal();
        }

        function deleteEvent(event) {
            var dataSource = calendar.getDataSource();
    
            calendar.setDataSource(dataSource.filter(item => item.id !== event.id));
        }

        function saveEvent() {
            var event = {
                id: $('#event-modal input[name="event-index"]').val(),
                name: $('#event-modal input[name="event-name"]').val(),
                location: $('#event-modal input[name="event-location"]').val(),
                startDate: $('#event-modal input[name="event-start-date"]').datepicker('getDate'),
                endDate: $('#event-modal input[name="event-end-date"]').datepicker('getDate')
            }
    
            var dataSource = calendar.getDataSource();

            if (event.id) {
                for (var i in dataSource) {
                    if (dataSource[i].id == event.id) {
                        dataSource[i].name = event.name;
                        dataSource[i].location = event.location;
                        dataSource[i].startDate = event.startDate;
                        dataSource[i].endDate = event.endDate;
                    }
                }
            }
            else
            {
                var newId = 0;
                for(var i in dataSource) {
                    if(dataSource[i].id > newId) {
                        newId = dataSource[i].id;
                    }
                }
        
                newId++;
                event.id = newId;
    
                dataSource.push(event);
            }
    
            calendar.setDataSource(dataSource);
            $('#event-modal').modal('hide');
        }

        $(function() {

            calendar = new Calendar('#calendar', { 
                enableContextMenu: true,
                enableRangeSelection: true,
                displayWeekNumber: true,
                disabledWeekDays: [0,6],
                style: 'border',
                contextMenuItems:[
                    {
                        text: 'Update',
                        click: editEvent
                    },
                    {
                        text: 'Delete',
                        click: deleteEvent
                    }
                ],
                selectRange: function(e) {
                    editEvent({ startDate: e.startDate, endDate: e.endDate });
                },
                mouseOnDay: function(e) {
                    if(e.events.length > 0) {
                        var content = '';
                
                        for(var i in e.events) {
                            content += '<div class="event-tooltip-content">'
                                            + '<div class="event-name" style="color:' + e.events[i].color + '">' + e.events[i].name + '</div>'
                                        + '</div>';
                        }
            
                        $(e.element).popover({ 
                            trigger: 'manual',
                            container: 'body',
                            html:true,
                            content: content
                        });
                
                        $(e.element).popover('show');
                    }
                },
                mouseOutDay: function(e) {
                    if(e.events.length > 0) {
                        $(e.element).popover('hide');
                    }
                },
                dataSource: function(){
                    var myData= [];
                    return fetch('/userholidays/GetCalendarItems')
                    .then(response => response.json())
                    .then(function(response){
                        return response.map(r => ({
                            id: r.id,
                            name: r.name,
                            startDate: new Date(r.startDate),
                            endDate: new Date(r.endDate),
                            color: r.color,
                        }));          
            });
                }
            });
        });

    </script>

}